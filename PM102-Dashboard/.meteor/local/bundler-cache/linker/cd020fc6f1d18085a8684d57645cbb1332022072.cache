[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar DDP = Package['ddp-client'].DDP;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar Hook = Package['callback-hook'].Hook;\nvar Template = Package['templating-runtime'].Template;\nvar _ = Package.underscore._;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar Spiderable;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                          //\n// packages/spiderable/spiderable.js                                                        //\n//                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                            //\nSpiderable = {};                                                                            // 1\n                                                                                            // 2\n                                                                                            // 3\n//////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                          //\n// packages/spiderable/spiderable_client.js                                                 //\n//                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                            //\n// We want to provide a deteriministic indicator of when the page is 'done'                 // 1\n// This is non-trivial: e.g. an infinite stream of tweets is never done.                    // 2\n//                                                                                          // 3\n// We do this instead:                                                                      // 4\n//   We are done sometime after all initial subscriptions are ready                         // 5\n//   Initial subscriptions are those started in the top-level script execution,             // 6\n//   or from a Meteor.startup callback when Meteor.startup is called in                     // 7\n//   top-level script execution.                                                            // 8\n//                                                                                          // 9\n// Note that we don't guarantee that we won't wait longer than we have to;                  // 10\n// extra subscriptions may be made, and extra data past the minimum may be                  // 11\n// received.                                                                                // 12\n//                                                                                          // 13\n// We set this 'started' flag as Package.spiderable.Spiderable._initialSubscriptionsStarted\n// This is used by our phantomjs to determine when the subscriptions are started;           // 15\n// it then polls until all subscriptions are ready.                                         // 16\n                                                                                            // 17\nSpiderable._initialSubscriptionsStarted = false;                                            // 18\n                                                                                            // 19\nSpiderable._onReadyHook = new Hook({                                                        // 20\n  debugPrintExceptions: \"Spiderable.addReadyCondition callback\"                             // 21\n});                                                                                         // 22\n                                                                                            // 23\n// register a new onReady hook for validation                                               // 24\nSpiderable.addReadyCondition = function (fn) {                                              // 25\n  return Spiderable._onReadyHook.register(fn);                                              // 26\n};                                                                                          // 27\n                                                                                            // 28\n//                                                                                          // 29\n// register default hooks                                                                   // 30\n                                                                                            // 31\n// top level code ready                                                                     // 32\nSpiderable.addReadyCondition(function () {                                                  // 33\n  // subs & top level code (startup) completed                                              // 34\n  return Spiderable._initialSubscriptionsStarted;                                           // 35\n})                                                                                          // 36\nvar startupCallbacksDone = function () {                                                    // 37\n  Spiderable._initialSubscriptionsStarted = true;                                           // 38\n};                                                                                          // 39\n// This extra indirection is how we get called last                                         // 40\nvar topLevelCodeDone = function () {                                                        // 41\n  // We'd like to use Meteor.startup here I think, but docs/behaviour of that is wrong      // 42\n  Meteor._setImmediate(function () { startupCallbacksDone(); });                            // 43\n};                                                                                          // 44\nMeteor.startup(function () { topLevelCodeDone(); });                                        // 45\n                                                                                            // 46\n// all ddp subs ready                                                                       // 47\nSpiderable.addReadyCondition(function () {                                                  // 48\n  Tracker.flush();                                                                          // 49\n  return DDP._allSubscriptionsReady();                                                      // 50\n})                                                                                          // 51\n                                                                                            // 52\n// run all hooks and return true if they all pass                                           // 53\nSpiderable.isReady = function () {                                                          // 54\n  var isReady = true;                                                                       // 55\n  Spiderable._onReadyHook.each(function (callback) {                                        // 56\n    if (callback()) {                                                                       // 57\n      return true; // next callback                                                         // 58\n    } else {                                                                                // 59\n      isReady = false;                                                                      // 60\n      return false; // stop immediately                                                     // 61\n    }                                                                                       // 62\n  });                                                                                       // 63\n  return isReady;                                                                           // 64\n};                                                                                          // 65\n                                                                                            // 66\n                                                                                            // 67\n//////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package.spiderable = {}, {\n  Spiderable: Spiderable\n});\n\n})();\n","servePath":"/packages/spiderable.js"}]