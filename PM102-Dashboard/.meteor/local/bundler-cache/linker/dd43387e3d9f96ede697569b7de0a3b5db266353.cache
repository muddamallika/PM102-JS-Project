[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar meteorInstall = Package['modules-runtime'].meteorInstall;\n\n/* Package-scope variables */\nvar Buffer, process;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"modules\":{\"client.js\":[\"./install-packages.js\",\"./stubs.js\",\"./buffer.js\",\"./process.js\",\"reify/lib/runtime\",\"./css\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/client.js                                                //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nrequire(\"./install-packages.js\");                                            // 1\nrequire(\"./stubs.js\");                                                       // 2\nrequire(\"./buffer.js\");                                                      // 3\nrequire(\"./process.js\");                                                     // 4\nrequire(\"reify/lib/runtime\").enable(module.constructor);                     // 5\n                                                                             // 6\nexports.addStyles = require(\"./css\").addStyles;                              // 7\n                                                                             // 8\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"buffer.js\":[\"buffer\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/buffer.js                                                //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\ntry {                                                                        // 1\n  Buffer = global.Buffer || require(\"buffer\").Buffer;                        // 2\n} catch (noBuffer) {}                                                        // 3\n                                                                             // 4\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"css.js\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/css.js                                                   //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nvar doc = document;                                                          // 1\nvar head = doc.getElementsByTagName(\"head\").item(0);                         // 2\n                                                                             // 3\nexports.addStyles = function (css) {                                         // 4\n  var style = doc.createElement(\"style\");                                    // 5\n                                                                             // 6\n  style.setAttribute(\"type\", \"text/css\");                                    // 7\n                                                                             // 8\n  // https://msdn.microsoft.com/en-us/library/ms535871(v=vs.85).aspx         // 9\n  var internetExplorerSheetObject =                                          // 10\n    style.sheet || // Edge/IE11.                                             // 11\n    style.styleSheet; // Older IEs.                                          // 12\n                                                                             // 13\n  if (internetExplorerSheetObject) {                                         // 14\n    internetExplorerSheetObject.cssText = css;                               // 15\n  } else {                                                                   // 16\n    style.appendChild(doc.createTextNode(css));                              // 17\n  }                                                                          // 18\n                                                                             // 19\n  return head.appendChild(style);                                            // 20\n};                                                                           // 21\n                                                                             // 22\n///////////////////////////////////////////////////////////////////////////////\n\n},\"install-packages.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/install-packages.js                                      //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nfunction install(name, mainModule) {                                         // 1\n  var meteorDir = {};                                                        // 2\n                                                                             // 3\n  // Given a package name <name>, install a stub module in the               // 4\n  // /node_modules/meteor directory called <name>.js, so that                // 5\n  // require.resolve(\"meteor/<name>\") will always return                     // 6\n  // /node_modules/meteor/<name>.js instead of something like                // 7\n  // /node_modules/meteor/<name>/index.js, in the rare but possible event    // 8\n  // that the package contains a file called index.js (#6590).               // 9\n                                                                             // 10\n  if (mainModule) {                                                          // 11\n    meteorDir[name + \".js\"] = [mainModule, function (require, e, module) {   // 12\n      module.exports = require(mainModule);                                  // 13\n    }];                                                                      // 14\n  } else {                                                                   // 15\n    // back compat with old Meteor packages                                  // 16\n    meteorDir[name + \".js\"] = function (r, e, module) {                      // 17\n      module.exports = Package[name];                                        // 18\n    };                                                                       // 19\n  }                                                                          // 20\n                                                                             // 21\n  meteorInstall({                                                            // 22\n    node_modules: {                                                          // 23\n      meteor: meteorDir                                                      // 24\n    }                                                                        // 25\n  });                                                                        // 26\n}                                                                            // 27\n                                                                             // 28\n// This file will be modified during computeJsOutputFilesMap to include      // 29\n// install(<name>) calls for every Meteor package.                           // 30\n                                                                             // 31\ninstall(\"underscore\");                                                       // 32\ninstall(\"meteor\");                                                           // 33\ninstall(\"meteor-base\");                                                      // 34\ninstall(\"mobile-experience\");                                                // 35\ninstall(\"modules-runtime\");                                                  // 36\ninstall(\"modules\", \"meteor/modules/client.js\");                              // 37\ninstall(\"es5-shim\", \"meteor/es5-shim/client.js\");                            // 38\ninstall(\"promise\", \"meteor/promise/client.js\");                              // 39\ninstall(\"ecmascript-runtime\", \"meteor/ecmascript-runtime/runtime.js\");       // 40\ninstall(\"babel-compiler\");                                                   // 41\ninstall(\"ecmascript\");                                                       // 42\ninstall(\"base64\");                                                           // 43\ninstall(\"ejson\");                                                            // 44\ninstall(\"id-map\");                                                           // 45\ninstall(\"ordered-dict\");                                                     // 46\ninstall(\"tracker\");                                                          // 47\ninstall(\"babel-runtime\", \"meteor/babel-runtime/babel-runtime.js\");           // 48\ninstall(\"random\");                                                           // 49\ninstall(\"mongo-id\");                                                         // 50\ninstall(\"diff-sequence\");                                                    // 51\ninstall(\"geojson-utils\", \"meteor/geojson-utils/main.js\");                    // 52\ninstall(\"minimongo\");                                                        // 53\ninstall(\"check\", \"meteor/check/match.js\");                                   // 54\ninstall(\"retry\");                                                            // 55\ninstall(\"ddp-common\");                                                       // 56\ninstall(\"reload\");                                                           // 57\ninstall(\"ddp-client\");                                                       // 58\ninstall(\"ddp\");                                                              // 59\ninstall(\"ddp-server\");                                                       // 60\ninstall(\"allow-deny\");                                                       // 61\ninstall(\"insecure\");                                                         // 62\ninstall(\"mongo\");                                                            // 63\ninstall(\"blaze-html-templates\");                                             // 64\ninstall(\"reactive-var\");                                                     // 65\ninstall(\"jquery\", \"meteor/jquery/main.js\");                                  // 66\ninstall(\"standard-minifier-css\");                                            // 67\ninstall(\"standard-minifier-js\");                                             // 68\ninstall(\"shell-server\");                                                     // 69\ninstall(\"autopublish\");                                                      // 70\ninstall(\"reactive-dict\");                                                    // 71\ninstall(\"kadira:flow-router\");                                               // 72\ninstall(\"observe-sequence\");                                                 // 73\ninstall(\"deps\");                                                             // 74\ninstall(\"htmljs\");                                                           // 75\ninstall(\"blaze\");                                                            // 76\ninstall(\"spacebars\");                                                        // 77\ninstall(\"templating-compiler\");                                              // 78\ninstall(\"templating-runtime\");                                               // 79\ninstall(\"templating\");                                                       // 80\ninstall(\"kadira:blaze-layout\");                                              // 81\ninstall(\"erasaur:meteor-lodash\");                                            // 82\ninstall(\"stolinski:stylus-multi\");                                           // 83\ninstall(\"fortawesome:fontawesome\");                                          // 84\ninstall(\"callback-hook\");                                                    // 85\ninstall(\"spiderable\");                                                       // 86\ninstall(\"fastclick\");                                                        // 87\ninstall(\"ui\");                                                               // 88\ninstall(\"session\");                                                          // 89\ninstall(\"raix:handlebar-helpers\");                                           // 90\ninstall(\"aldeed:simple-schema\");                                             // 91\ninstall(\"raix:eventemitter\");                                                // 92\ninstall(\"aldeed:collection2-core\");                                          // 93\ninstall(\"aldeed:schema-index\");                                              // 94\ninstall(\"aldeed:schema-deny\");                                               // 95\ninstall(\"aldeed:collection2\");                                               // 96\ninstall(\"livedata\");                                                         // 97\ninstall(\"momentjs:moment\");                                                  // 98\ninstall(\"aldeed:autoform\");                                                  // 99\ninstall(\"ddp-rate-limiter\");                                                 // 100\ninstall(\"localstorage\");                                                     // 101\ninstall(\"accounts-base\", \"meteor/accounts-base/client_main.js\");             // 102\ninstall(\"service-configuration\");                                            // 103\ninstall(\"sha\");                                                              // 104\ninstall(\"srp\");                                                              // 105\ninstall(\"accounts-password\");                                                // 106\ninstall(\"less\");                                                             // 107\ninstall(\"accounts-ui-unstyled\");                                             // 108\ninstall(\"accounts-ui\");                                                      // 109\ninstall(\"matb33:bootstrap-base\");                                            // 110\ninstall(\"matb33:bootstrap-glyphicons\");                                      // 111\ninstall(\"meteortoys:toykit\");                                                // 112\ninstall(\"msavin:jetsetter\");                                                 // 113\ninstall(\"coffeescript\");                                                     // 114\ninstall(\"zimme:active-route\");                                               // 115\ninstall(\"gwendall:auth-client-callbacks\");                                   // 116\ninstall(\"msavin:mongol\");                                                    // 117\ninstall(\"meteortoys:blueprint\");                                             // 118\ninstall(\"meteortoys:authenticate\");                                          // 119\ninstall(\"meteortoys:shell\");                                                 // 120\ninstall(\"meteortoys:method\");                                                // 121\ninstall(\"meteortoys:result\");                                                // 122\ninstall(\"meteortoys:autopub\");                                               // 123\ninstall(\"meteortoys:pub\");                                                   // 124\ninstall(\"meteortoys:sub\");                                                   // 125\ninstall(\"meteortoys:email\");                                                 // 126\ninstall(\"meteortoys:listen\");                                                // 127\ninstall(\"meteortoys:throttle\");                                              // 128\ninstall(\"meteortoys:status\");                                                // 129\ninstall(\"meteortoys:hotreload\");                                             // 130\ninstall(\"meteortoys:allthings\");                                             // 131\ninstall(\"stylus\");                                                           // 132\ninstall(\"anti:i18n\");                                                        // 133\ninstall(\"ian:accounts-ui-bootstrap-3\");                                      // 134\ninstall(\"webapp\");                                                           // 135\ninstall(\"hot-code-push\");                                                    // 136\ninstall(\"launch-screen\");                                                    // 137\ninstall(\"autoupdate\");                                                       // 138\ninstall(\"mdg:validation-error\");                                             // 139\n                                                                             // 140\n///////////////////////////////////////////////////////////////////////////////\n\n},\"process.js\":[\"process\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/process.js                                               //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\ntry {                                                                        // 1\n  // The application can run `npm install process` to provide its own        // 2\n  // process stub; otherwise this module will provide a partial stub.        // 3\n  process = global.process || require(\"process\");                            // 4\n} catch (noProcess) {                                                        // 5\n  process = {};                                                              // 6\n}                                                                            // 7\n                                                                             // 8\nif (Meteor.isServer) {                                                       // 9\n  // Make require(\"process\") work on the server in all versions of Node.     // 10\n  meteorInstall({                                                            // 11\n    node_modules: {                                                          // 12\n      \"process.js\": function (r, e, module) {                                // 13\n        module.exports = process;                                            // 14\n      }                                                                      // 15\n    }                                                                        // 16\n  });                                                                        // 17\n} else {                                                                     // 18\n  process.platform = \"browser\";                                              // 19\n  process.nextTick = process.nextTick || Meteor._setImmediate;               // 20\n}                                                                            // 21\n                                                                             // 22\nif (typeof process.env !== \"object\") {                                       // 23\n  process.env = {};                                                          // 24\n}                                                                            // 25\n                                                                             // 26\n_.extend(process.env, meteorEnv);                                            // 27\n                                                                             // 28\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"stubs.js\":[\"meteor-node-stubs\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/modules/stubs.js                                                 //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\ntry {                                                                        // 1\n  // When meteor-node-stubs is installed in the application's root           // 2\n  // node_modules directory, requiring it here installs aliases for stubs    // 3\n  // for all Node built-in modules, such as fs, util, and http.              // 4\n  require(\"meteor-node-stubs\");                                              // 5\n} catch (noStubs) {}                                                         // 6\n                                                                             // 7\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"node_modules\":{\"reify\":{\"lib\":{\"runtime.js\":[\"./entry.js\",\"./utils.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// node_modules/meteor/modules/node_modules/reify/lib/runtime.js             //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nvar Entry = require(\"./entry.js\").Entry;                                     // 1\nvar utils = require(\"./utils.js\");                                           // 2\n                                                                             // 3\nexports.enable = function (Module) {                                         // 4\n  var Mp = Module.prototype;                                                 // 5\n                                                                             // 6\n  if (typeof Mp.import === \"function\" &&                                     // 7\n      typeof Mp.export === \"function\") {                                     // 8\n    // If the Mp.{import,export} methods have already been                   // 9\n    // defined, abandon reification immediately.                             // 10\n    return Module;                                                           // 11\n  }                                                                          // 12\n                                                                             // 13\n  // Platform-specific code should implement this method however             // 14\n  // appropriate. Module.prototype.resolve(id) should return an absolute     // 15\n  // version of the given module identifier, like require.resolve.           // 16\n  Mp.resolve = Mp.resolve || function resolve(id) {                          // 17\n    throw new Error(\"Module.prototype.resolve not implemented\");             // 18\n  };                                                                         // 19\n                                                                             // 20\n  // Platform-specific code should find a way to call this method whenever   // 21\n  // the module system is about to return module.exports from require. This  // 22\n  // might happen more than once per module, in case of dependency cycles,   // 23\n  // so we want Module.prototype.runModuleSetters to run each time.          // 24\n  Mp.runModuleSetters = function runModuleSetters(valueToPassThrough) {      // 25\n    var entry = Entry.get(this.id);                                          // 26\n    if (entry) {                                                             // 27\n      entry.runModuleSetters(this);                                          // 28\n    }                                                                        // 29\n                                                                             // 30\n    // Assignments to exported local variables get wrapped with calls to     // 31\n    // module.runModuleSetters, so module.runModuleSetters returns the       // 32\n    // valueToPassThrough parameter to allow the value of the original       // 33\n    // expression to pass through. For example,                              // 34\n    //                                                                       // 35\n    //   export var a = 1;                                                   // 36\n    //   console.log(a += 3);                                                // 37\n    //                                                                       // 38\n    // becomes                                                               // 39\n    //                                                                       // 40\n    //   module.export(\"a\", () => a);                                        // 41\n    //   var a = 1;                                                          // 42\n    //   console.log(module.runModuleSetters(a += 3));                       // 43\n    //                                                                       // 44\n    // This ensures module.runModuleSetters runs immediately after the       // 45\n    // assignment, and does not interfere with the larger computation.       // 46\n    return valueToPassThrough;                                               // 47\n  };                                                                         // 48\n                                                                             // 49\n  function setESModule(module) {                                             // 50\n    var exports = module.exports;                                            // 51\n    if (exports && typeof exports === \"object\") {                            // 52\n      exports.__esModule = true;                                             // 53\n    }                                                                        // 54\n  }                                                                          // 55\n                                                                             // 56\n  Mp.import = function (id, setters) {                                       // 57\n    var module = this;                                                       // 58\n    setESModule(module);                                                     // 59\n                                                                             // 60\n    var absoluteId = module.resolve(id);                                     // 61\n                                                                             // 62\n    if (setters && typeof setters === \"object\") {                            // 63\n      var entry = Entry.getOrCreate(absoluteId);                             // 64\n      entry.addSetters(module, setters);                                     // 65\n    }                                                                        // 66\n                                                                             // 67\n    var countBefore = entry && entry.runCount;                               // 68\n    var exports = typeof module.require === \"function\"                       // 69\n      ? module.require(absoluteId)                                           // 70\n      : require(absoluteId);                                                 // 71\n                                                                             // 72\n    if (entry && entry.runCount === countBefore) {                           // 73\n      // If require(absoluteId) didn't run any setters for this entry,       // 74\n      // perhaps because it's not the first time this module has been        // 75\n      // required, run the setters now using an object that passes as the    // 76\n      // real module object.                                                 // 77\n      entry.runModuleSetters({                                               // 78\n        id: absoluteId,                                                      // 79\n        exports: exports,                                                    // 80\n        getExportByName: Mp.getExportByName                                  // 81\n      });                                                                    // 82\n    }                                                                        // 83\n  };                                                                         // 84\n                                                                             // 85\n  // Register getter functions for local variables in the scope of an        // 86\n  // export statement. The keys of the getters object are exported names,    // 87\n  // and the values are functions that return local values.                  // 88\n  Mp.export = function (getters) {                                           // 89\n    var module = this;                                                       // 90\n    setESModule(module);                                                     // 91\n                                                                             // 92\n    if (utils.isPlainObject(getters)) {                                      // 93\n      Entry.getOrCreate(module.id).addGetters(getters);                      // 94\n    }                                                                        // 95\n                                                                             // 96\n    if (module.loaded) {                                                     // 97\n      // If the module has already been evaluated, then we need to trigger   // 98\n      // another round of entry.runModuleSetters calls, which begins by      // 99\n      // calling entry.runModuleGetters(module).                             // 100\n      module.runModuleSetters();                                             // 101\n    }                                                                        // 102\n  };                                                                         // 103\n                                                                             // 104\n  // This method can be overridden by client code to implement custom export\n  // naming logic. The current implementation works well with Babel's        // 106\n  // __esModule convention.                                                  // 107\n  Mp.getExportByName = function (name) {                                     // 108\n    var exports = this.exports;                                              // 109\n                                                                             // 110\n    if (name === \"*\") {                                                      // 111\n      return exports;                                                        // 112\n    }                                                                        // 113\n                                                                             // 114\n    if (name === \"default\" &&                                                // 115\n        ! (exports &&                                                        // 116\n           typeof exports === \"object\" &&                                    // 117\n           exports.__esModule &&                                             // 118\n           \"default\" in exports)) {                                          // 119\n      return exports;                                                        // 120\n    }                                                                        // 121\n                                                                             // 122\n    return exports && exports[name];                                         // 123\n  };                                                                         // 124\n                                                                             // 125\n  return Module;                                                             // 126\n};                                                                           // 127\n                                                                             // 128\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"entry.js\":[\"./utils.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// node_modules/meteor/modules/node_modules/reify/lib/entry.js               //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nvar hasOwn = Object.prototype.hasOwnProperty;                                // 1\nvar entryMap = Object.create(null);                                          // 2\nvar utils = require(\"./utils.js\");                                           // 3\n                                                                             // 4\nfunction Entry(id) {                                                         // 5\n  // Same as module.id for this module.                                      // 6\n  this.id = id;                                                              // 7\n  // The number of times this.runModuleSetters has been called.              // 8\n  this.runCount = 0;                                                         // 9\n  // Setters for assigning to local variables in parent modules.             // 10\n  this.setters = Object.create(null);                                        // 11\n  // Getters for local variables exported from this module.                  // 12\n  this.getters = Object.create(null);                                        // 13\n}                                                                            // 14\n                                                                             // 15\nvar Ep = Entry.prototype;                                                    // 16\n                                                                             // 17\nEntry.get = function (id) {                                                  // 18\n  return entryMap[id] || null;                                               // 19\n};                                                                           // 20\n                                                                             // 21\nEntry.getOrCreate = function (id) {                                          // 22\n  return entryMap[id] = entryMap[id] || new Entry(id);                       // 23\n};                                                                           // 24\n                                                                             // 25\nEp.addSetters = function (parent, setters) {                                 // 26\n  var entry = this;                                                          // 27\n                                                                             // 28\n  Object.keys(setters).forEach(function (name) {                             // 29\n    var setter = setters[name];                                              // 30\n    if (typeof setter === \"function\" &&                                      // 31\n        // Ignore any requests for the exports.__esModule property.\"         // 32\n        name !== \"__esModule\") {                                             // 33\n      setter.parent = parent;                                                // 34\n      (entry.setters[name] =                                                 // 35\n       entry.setters[name] || []                                             // 36\n      ).push(setter);                                                        // 37\n    }                                                                        // 38\n  });                                                                        // 39\n};                                                                           // 40\n                                                                             // 41\nEp.addGetters = function (getters) {                                         // 42\n  var entry = this;                                                          // 43\n  Object.keys(getters).forEach(function (name) {                             // 44\n    var getter = getters[name];                                              // 45\n    if (typeof getter === \"function\" &&                                      // 46\n        // Ignore any requests for the exports.__esModule property.\"         // 47\n        name !== \"__esModule\") {                                             // 48\n      // Should this throw if hasOwn.call(this.getters, name)?               // 49\n      entry.getters[name] = getter;                                          // 50\n    }                                                                        // 51\n  });                                                                        // 52\n};                                                                           // 53\n                                                                             // 54\nfunction runModuleSetters(module) {                                          // 55\n  var entry = entryMap[module.id];                                           // 56\n  if (entry) {                                                               // 57\n    entry.runModuleSetters(module);                                          // 58\n  }                                                                          // 59\n}                                                                            // 60\n                                                                             // 61\nfunction runModuleGetters(module) {                                          // 62\n  var entry = entryMap[module.id];                                           // 63\n  return entry ? entry.runModuleGetters(module) : 0;                         // 64\n}                                                                            // 65\n                                                                             // 66\nEp.runModuleGetters = function (module) {                                    // 67\n  var entry = this;                                                          // 68\n  var changeCount = 0;                                                       // 69\n                                                                             // 70\n  Object.keys(entry.getters).forEach(function (name) {                       // 71\n    if (entry.runGetter(module, name)) {                                     // 72\n      ++changeCount;                                                         // 73\n    }                                                                        // 74\n  });                                                                        // 75\n                                                                             // 76\n  return changeCount;                                                        // 77\n};                                                                           // 78\n                                                                             // 79\n// Returns true iff the getter updated module.exports with a new value.      // 80\nEp.runGetter = function (module, name) {                                     // 81\n  if (! hasOwn.call(this.getters, name)) {                                   // 82\n    return false;                                                            // 83\n  }                                                                          // 84\n                                                                             // 85\n  var getter = this.getters[name];                                           // 86\n  try {                                                                      // 87\n    var value = getter.call(module);                                         // 88\n  } catch (e) {}                                                             // 89\n  var exports = module.exports;                                              // 90\n                                                                             // 91\n  if (! hasOwn.call(exports, name) ||                                        // 92\n      exports[name] !== value) {                                             // 93\n    // We update module.exports[name] with the current value so that         // 94\n    // CommonJS require calls remain consistent with module.import.          // 95\n    exports[name] = value;                                                   // 96\n    return true;                                                             // 97\n  }                                                                          // 98\n                                                                             // 99\n  return false;                                                              // 100\n};                                                                           // 101\n                                                                             // 102\n// Called whenever module.exports might have changed, to trigger any         // 103\n// setters associated with the newly exported values.                        // 104\nEp.runModuleSetters = function (module) {                                    // 105\n  var entry = this;                                                          // 106\n  var names = Object.keys(entry.setters);                                    // 107\n                                                                             // 108\n  // Make sure module.exports is up to date before we call                   // 109\n  // module.getExportByName(name).                                           // 110\n  entry.runModuleGetters(module);                                            // 111\n                                                                             // 112\n  // Invoke the given callback once for every (setter, value, name) triple   // 113\n  // that needs to be called. Note that forEachSetter does not call any      // 114\n  // setters itself, only the given callback.                                // 115\n  function forEachSetter(callback, context) {                                // 116\n    names.forEach(function (name) {                                          // 117\n      entry.setters[name].forEach(function (setter) {                        // 118\n        var value = module.getExportByName(name);                            // 119\n        if (name === \"*\") {                                                  // 120\n          Object.keys(value).forEach(function (name) {                       // 121\n            call(setter, value[name], name);                                 // 122\n          });                                                                // 123\n        } else {                                                             // 124\n          call(setter, value, name);                                         // 125\n        }                                                                    // 126\n      });                                                                    // 127\n    });                                                                      // 128\n                                                                             // 129\n    function call(setter, value, name) {                                     // 130\n      if (name === \"__esModule\") {                                           // 131\n        // Ignore setters asking for module.exports.__esModule.              // 132\n        return;                                                              // 133\n      }                                                                      // 134\n                                                                             // 135\n      setter.last = setter.last || Object.create(null);                      // 136\n                                                                             // 137\n      if (! hasOwn.call(setter.last, name) ||                                // 138\n          setter.last[name] !== value) {                                     // 139\n        // Only invoke the callback if we have not called this setter        // 140\n        // (with a value of this name) before, or the current value is       // 141\n        // different from the last value we passed to this setter.           // 142\n        return callback.apply(context, arguments);                           // 143\n      }                                                                      // 144\n    }                                                                        // 145\n  }                                                                          // 146\n                                                                             // 147\n  // Every three elements of this list form a (setter, value, name) triple   // 148\n  // that needs to be invoked.                                               // 149\n  var settersToCall = [];                                                    // 150\n                                                                             // 151\n  // Lazily-initialized objects mapping parent module identifiers to         // 152\n  // relevant parent module objects and snapshots of their exports.          // 153\n  var relevantParents;                                                       // 154\n  var parentSnapshots;                                                       // 155\n                                                                             // 156\n  // Take snapshots of setter.parent.exports for any setters that we are     // 157\n  // planning to call, so that we can later determine if calling the         // 158\n  // setters modified any of those exports objects.                          // 159\n  forEachSetter(function (setter, value, name) {                             // 160\n    var parent = setter.parent;                                              // 161\n    parentSnapshots = parentSnapshots || Object.create(null);                // 162\n    if (! hasOwn.call(parentSnapshots, parent.id)) {                         // 163\n      relevantParents = relevantParents || Object.create(null);              // 164\n      relevantParents[parent.id] = parent;                                   // 165\n      if (utils.isPlainObject(parent.exports)) {                             // 166\n        // If parent.exports is an object, make a shallow clone of it so     // 167\n        // that we can see if it changes as a result of calling setters.     // 168\n        parentSnapshots[parent.id] = utils.assign({}, parent.exports);       // 169\n      } else {                                                               // 170\n        // If parent.exports is not an object, the \"snapshot\" is just the    // 171\n        // value of parent.exports.                                          // 172\n        parentSnapshots[parent.id] = parent.exports;                         // 173\n      }                                                                      // 174\n    }                                                                        // 175\n                                                                             // 176\n    // Push three elements at a time to avoid creating wrapper arrays for    // 177\n    // each (setter, value, name) triple. Note the i += 3 below.             // 178\n    settersToCall.push(setter, value, name);                                 // 179\n  });                                                                        // 180\n                                                                             // 181\n  // Now call all the setters that we decided we need to call.               // 182\n  for (var i = 0; i < settersToCall.length; i += 3) {                        // 183\n    var setter = settersToCall[i];                                           // 184\n    var value = settersToCall[i + 1];                                        // 185\n    var name = settersToCall[i + 2];                                         // 186\n    setter.call(module, setter.last[name] = value, name);                    // 187\n  }                                                                          // 188\n                                                                             // 189\n  ++entry.runCount;                                                          // 190\n                                                                             // 191\n  if (! relevantParents) {                                                   // 192\n    // If we never called takeSnapshot, then we can avoid checking           // 193\n    // relevantParents and parentSnapshots below.                            // 194\n    return;                                                                  // 195\n  }                                                                          // 196\n                                                                             // 197\n  // If any of the setters updated the module.exports of a parent module,    // 198\n  // or updated local variables that are exported by that parent module,     // 199\n  // then we must re-run any setters registered by that parent module.       // 200\n  Object.keys(relevantParents).forEach(function (id) {                       // 201\n    var parent = relevantParents[id];                                        // 202\n                                                                             // 203\n    if (runModuleGetters(parent) > 0) {                                      // 204\n      return runModuleSetters(parent);                                       // 205\n    }                                                                        // 206\n                                                                             // 207\n    var exports = parent.exports;                                            // 208\n    var snapshot = parentSnapshots[parent.id];                               // 209\n    if (utils.shallowObjEqual(exports, snapshot)) {                          // 210\n      // If parent.exports have not changed since we took the snapshot,      // 211\n      // then we do not need to run the parent's setters.                    // 212\n      return;                                                                // 213\n    }                                                                        // 214\n                                                                             // 215\n    runModuleSetters(parent);                                                // 216\n  });                                                                        // 217\n};                                                                           // 218\n                                                                             // 219\nexports.Entry = Entry;                                                       // 220\n                                                                             // 221\n///////////////////////////////////////////////////////////////////////////////\n\n}],\"utils.js\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// node_modules/meteor/modules/node_modules/reify/lib/utils.js               //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nvar hasOwn = Object.prototype.hasOwnProperty;                                // 1\nvar objToStr = Object.prototype.toString;                                    // 2\nvar objStr = objToStr.call({});                                              // 3\n                                                                             // 4\nfunction isPlainObject(value) {                                              // 5\n  return objToStr.call(value) === objStr;                                    // 6\n}                                                                            // 7\nexports.isPlainObject = isPlainObject;                                       // 8\n                                                                             // 9\nexports.assign = Object.assign || function (obj) {                           // 10\n  var argc = arguments.length;                                               // 11\n  for (var i = 1; i < argc; ++i) {                                           // 12\n    var arg = arguments[i];                                                  // 13\n    if (arg && typeof arg === \"object\") {                                    // 14\n      var keys = Object.keys(arg);                                           // 15\n      for (var k = 0; k < keys.length; ++k) {                                // 16\n        var key = keys[k];                                                   // 17\n        obj[key] = arg[key];                                                 // 18\n      }                                                                      // 19\n    }                                                                        // 20\n  }                                                                          // 21\n  return obj;                                                                // 22\n};                                                                           // 23\n                                                                             // 24\nexports.shallowObjEqual = function(a, b) {                                   // 25\n  if (a === b) {                                                             // 26\n    return true;                                                             // 27\n  }                                                                          // 28\n                                                                             // 29\n  if (! isPlainObject(a) ||                                                  // 30\n      ! isPlainObject(b)) {                                                  // 31\n    return false;                                                            // 32\n  }                                                                          // 33\n                                                                             // 34\n  var aKeys = Object.keys(a);                                                // 35\n  var bKeys = Object.keys(b);                                                // 36\n                                                                             // 37\n  if (aKeys.length !== bKeys.length) {                                       // 38\n    return false;                                                            // 39\n  }                                                                          // 40\n                                                                             // 41\n  return aKeys.every(function (key) {                                        // 42\n    return hasOwn.call(b, key) &&                                            // 43\n      a[key] === b[key];                                                     // 44\n  });                                                                        // 45\n};                                                                           // 46\n                                                                             // 47\n///////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\"extensions\":[\".js\",\".json\"]});\nvar exports = require(\"./node_modules/meteor/modules/client.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package.modules = exports, {\n  meteorInstall: meteorInstall,\n  Buffer: Buffer,\n  process: process\n});\n\n})();\n","servePath":"/packages/modules.js"}]