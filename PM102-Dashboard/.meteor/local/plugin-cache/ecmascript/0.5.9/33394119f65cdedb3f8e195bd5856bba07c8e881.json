{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./accounts_server.js","imported":["AccountsServer"],"specifiers":[{"kind":"named","imported":"AccountsServer","local":"AccountsServer"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/accounts-base/url_server.js","filenameRelative":"/packages/accounts-base/url_server.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/accounts-base/url_server.js.map","sourceFileName":"/packages/accounts-base/url_server.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"url_server"},"ignored":false,"code":"var AccountsServer;module.import(\"./accounts_server.js\",{\"AccountsServer\":function(v){AccountsServer=v}});\n\n// XXX These should probably not actually be public?\n\nAccountsServer.prototype.urls = {\n  resetPassword: function () {\n    function resetPassword(token) {\n      return Meteor.absoluteUrl('#/reset-password/' + token);\n    }\n\n    return resetPassword;\n  }(),\n\n  verifyEmail: function () {\n    function verifyEmail(token) {\n      return Meteor.absoluteUrl('#/verify-email/' + token);\n    }\n\n    return verifyEmail;\n  }(),\n\n  enrollAccount: function () {\n    function enrollAccount(token) {\n      return Meteor.absoluteUrl('#/enroll-account/' + token);\n    }\n\n    return enrollAccount;\n  }()\n};","ast":null,"map":{"version":3,"sources":["/packages/accounts-base/url_server.js"],"names":["AccountsServer","prototype","urls","resetPassword","token","Meteor","absoluteUrl","verifyEmail","enrollAccount"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,sBAA7B;;AAEA;;AAEAA,eAAeC,SAAf,CAAyBC,IAAzB,GAAgC;AAC9BC;AAAe,2BAAUC,KAAV,EAAiB;AAC9B,aAAOC,OAAOC,WAAP,CAAmB,sBAAsBF,KAAzC,CAAP;AACD;;AAFD;AAAA,KAD8B;;AAK9BG;AAAa,yBAAUH,KAAV,EAAiB;AAC5B,aAAOC,OAAOC,WAAP,CAAmB,oBAAoBF,KAAvC,CAAP;AACD;;AAFD;AAAA,KAL8B;;AAS9BI;AAAe,2BAAUJ,KAAV,EAAiB;AAC9B,aAAOC,OAAOC,WAAP,CAAmB,sBAAsBF,KAAzC,CAAP;AACD;;AAFD;AAAA;AAT8B,CAAhC","file":"/packages/accounts-base/url_server.js.map","sourcesContent":["import {AccountsServer} from \"./accounts_server.js\";\n\n// XXX These should probably not actually be public?\n\nAccountsServer.prototype.urls = {\n  resetPassword: function (token) {\n    return Meteor.absoluteUrl('#/reset-password/' + token);\n  },\n\n  verifyEmail: function (token) {\n    return Meteor.absoluteUrl('#/verify-email/' + token);\n  },\n\n  enrollAccount: function (token) {\n    return Meteor.absoluteUrl('#/enroll-account/' + token);\n  }\n};\n"]},"hash":"33394119f65cdedb3f8e195bd5856bba07c8e881"}
