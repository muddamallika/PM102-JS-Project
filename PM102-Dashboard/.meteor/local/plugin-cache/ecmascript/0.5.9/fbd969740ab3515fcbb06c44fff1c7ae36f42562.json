{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/ddp-server/session_view_tests.js","filenameRelative":"/packages/ddp-server/session_view_tests.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/ddp-server/session_view_tests.js.map","sourceFileName":"/packages/ddp-server/session_view_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"session_view_tests"},"ignored":false,"code":"var newView = function newView(test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function () {\n      function added(collection, id, fields) {\n        results.push({ fun: 'added', id: id, fields: fields });\n      }\n\n      return added;\n    }(),\n    changed: function () {\n      function changed(collection, id, _changed) {\n        if (_.isEmpty(_changed)) return;\n        results.push({ fun: 'changed', id: id, changed: _changed });\n      }\n\n      return changed;\n    }(),\n    removed: function () {\n      function removed(collection, id) {\n        results.push({ fun: 'removed', id: id });\n      }\n\n      return removed;\n    }()\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n  v.drain = function () {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({ fun: 'added', id: \"A1\", fields: {} });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { a: \"foo\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { a: \"foo\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { a: \"foo\", b: \"bar\" });\n  v.expectResult({ fun: 'changed', 'id': \"A1\", changed: { b: \"bar\" } });\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n  // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { foo: \"baz\" }, []);\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { baz: \"quux\" });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { baz: \"quux\" } });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], { fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n    canon = \"baz\";\n  }\n  v.changed(\"B\", \"A1\", { foo: canon });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n\n  v.changed(\"B\", \"A1\", { foo: \"bar\" });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"bar\" });\n  v.added(\"C\", \"A1\", { foo: \"bar\" });\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.changed(\"B\", \"A1\", { foo: undefined });\n  v.changed(\"C\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"bar\" });\n  v.added(\"C\", \"A1\", { foo: \"bar\" });\n  v.changed(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { foo: \"baz\" });\n  v.changed(\"C\", \"A1\", { foo: \"baz\" });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\", thing: \"stuff\", baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: undefined } });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"baz\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"baz\" } });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: \"stuff\", foo: undefined, baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"baz\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"eats\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"eats\" } });\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\", thing: \"stuff\", baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: undefined } });\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n\n  v.added('A', \"A1\", { foo: 'bar' });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: 'bar' } });\n\n  v.added('B', \"A1\", { hi: 'there' });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { hi: 'there' } });\n\n  v.removed('A', 'A1');\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { foo: undefined } });\n\n  v.removed('B', 'A1');\n  v.expectResult({ fun: 'removed', id: 'A1' });\n});\n\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n\n  v.added('A', \"A1\", {});\n  v.expectResult({ fun: 'added', id: \"A1\", fields: {} });\n\n  v.changed('A', \"A1\", { constructor: 'bla' });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { constructor: 'bla' } });\n});\n\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { field: \"value\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { field: \"value\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { field: undefined });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { field: undefined } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { field: undefined });\n  v.expectNoResult();\n});","ast":null,"map":{"version":3,"sources":["/packages/ddp-server/session_view_tests.js"],"names":["newView","test","results","view","DDPServer","_SessionCollectionView","added","collection","id","fields","push","fun","changed","_","isEmpty","removed","v","each","it","bind","expectResult","result","equal","shift","expectNoResult","drain","ret","Tinytest","add","a","b","foo","undefined","baz","canon","maybeResults","length","thing","hi","constructor","field"],"mappings":"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","file":"/packages/ddp-server/session_view_tests.js.map","sourcesContent":["var newView = function(test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function (collection, id, fields) {\n      results.push({fun: 'added', id: id, fields: fields});\n    },\n    changed: function (collection, id, changed) {\n      if (_.isEmpty(changed))\n        return;\n      results.push({fun: 'changed', id: id, changed: changed});\n    },\n    removed: function (collection, id) {\n      results.push({fun: 'removed', id: id});\n    }\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n  v.drain = function() {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {a: \"foo\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {a: \"foo\"}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {a: \"foo\", b: \"bar\"});\n  v.expectResult({fun: 'changed', 'id': \"A1\", changed: {b: \"bar\"}});\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n  // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: \"baz\"}, []);\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {baz:\"quux\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {baz: \"quux\"}});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], {fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n    canon = \"baz\";\n  }\n  v.changed(\"B\", \"A1\", {foo: canon});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {});\n\n  v.changed(\"B\", \"A1\", {foo: \"bar\"});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.changed(\"B\", \"A1\", {foo: undefined});\n  v.changed(\"C\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"B\", \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: \"baz\"});\n  v.changed(\"C\", \"A1\", {foo: \"baz\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: \"stuff\", foo: undefined, baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", {foo: \"eats\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"eats\"}});\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {foo: 'bar'});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: 'bar'}});\n\n  v.added('B',  \"A1\", {hi: 'there'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {hi: 'there'}});\n\n  v.removed('A', 'A1');\n  v.expectResult({fun: 'changed', id: 'A1', changed: {foo: undefined}});\n\n  v.removed('B', 'A1');\n  v.expectResult({fun: 'removed', id: 'A1'});\n});\n\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n\n  v.changed('A',  \"A1\", {constructor: 'bla'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {constructor: 'bla'}});\n});\n\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {field: \"value\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {field: \"value\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {field: undefined}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectNoResult();\n\n});\n"]},"hash":"fbd969740ab3515fcbb06c44fff1c7ae36f42562"}
